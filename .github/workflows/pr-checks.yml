name: Pull Request Checks

on:
  pull_request:
    branches: [ develop, release ]
  push:
    branches: [ develop, release ]

jobs:
  go-checks:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.6'
    
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Cache golangci-lint
      uses: actions/cache@v4
      with:
        path: ~/.cache/golangci-lint
        key: ${{ runner.os }}-golangci-lint-${{ hashFiles('.golangci.yml') }}
        restore-keys: |
          ${{ runner.os }}-golangci-lint-
    
    - name: Run go mod tidy
      run: |
        go mod tidy
        if [ -n "$(git status --porcelain go.mod go.sum)" ]; then
          echo "go.mod or go.sum is not tidy"
          git diff go.mod go.sum
          exit 1
        fi
    
    - name: Run go fmt
      run: |
        if [ -n "$(go fmt ./...)" ]; then
          echo "Code is not formatted with go fmt"
          echo "Please run: go fmt ./..."
          exit 1
        fi
    
    - name: Run go vet
      run: go vet ./...
    
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v7
      with:
        version: v2.4.0
        args: --config .golangci.yml --verbose
    
    - name: Build project
      run: go build ./...
    
    - name: Run unit tests
      run: |
        if [ -n "$(find . -name '*_test.go' -not -path './vendor/*' -not -path './test/integration/*' -not -path './internal/testutil/integration/*')" ]; then
          echo "Running unit tests (excluding integration tests)..."
          go test -v $(go list ./... | grep -v integration)
        else
          echo "No unit test files found, skipping test execution"
        fi
    
    - name: Build integration tests to verify they compile
      run: |
        echo "Verifying integration tests compile..."
        go test -tags=integration -c ./internal/testutil/integration
        go test -tags=integration -c ./test/integration
        rm -f integration.test integration*.test