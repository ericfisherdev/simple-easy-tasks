version: '3.8'

services:
  # Main application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: ${VERSION:-dev}
        BUILD_TIME: ${BUILD_TIME}
        COMMIT_HASH: ${COMMIT_HASH}
    container_name: simple-easy-tasks-app
    ports:
      - "${APP_PORT:-8080}:8080"
    environment:
      - PORT=8080
      - GIN_MODE=${GIN_MODE:-release}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - DATABASE_URL=http://pocketbase:8090
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000}
    volumes:
      - app_logs:/app/logs
      - app_config:/app/configs
    depends_on:
      pocketbase:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PocketBase service
  pocketbase:
    image: ghcr.io/muchobien/pocketbase:latest
    container_name: simple-easy-tasks-pocketbase
    ports:
      - "${PB_PORT:-8090}:8090"
    environment:
      - POCKETBASE_ADMIN_EMAIL=${PB_ADMIN_EMAIL}
      - POCKETBASE_ADMIN_PASSWORD=${PB_ADMIN_PASSWORD}
    volumes:
      - pocketbase_data:/pb_data
      - ./configs/pocketbase:/pb_public
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8090/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis service for caching
  redis:
    image: redis:7.2-alpine
    container_name: simple-easy-tasks-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
      - ./configs/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Optional: Reverse proxy (nginx)
  nginx:
    image: nginx:alpine
    container_name: simple-easy-tasks-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./configs/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - production

volumes:
  # Application data
  app_logs:
    driver: local
  app_config:
    driver: local
  
  # PocketBase data
  pocketbase_data:
    driver: local
  
  # Redis data
  redis_data:
    driver: local
  
  # Nginx logs
  nginx_logs:
    driver: local

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16