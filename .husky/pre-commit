#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "üîç Running pre-commit checks..."

# 1. Check code formatting
echo "üìù Checking code formatting..."
make fmt-check || {
    echo "‚ùå Code formatting check failed. Please run 'make fmt' to fix."
    exit 1
}

# 2. Run go vet
echo "üîé Running go vet..."
make vet || {
    echo "‚ùå Go vet found issues."
    exit 1
}

# 3. Run staticcheck (linter)
echo "üßπ Running staticcheck..."
make staticcheck || {
    echo "‚ùå Staticcheck found issues."
    exit 1
}

# 4. Check go mod tidy
echo "üì¶ Checking go.mod tidiness..."
go mod tidy
if [ -n "$(git diff --cached go.mod go.sum 2>/dev/null)" ]; then
    echo "‚ùå go.mod or go.sum would be modified by 'go mod tidy'"
    echo "Please run 'go mod tidy' and stage the changes."
    exit 1
fi

# 5. Build the project
echo "üî® Building project..."
go build ./... || {
    echo "‚ùå Build failed."
    exit 1
}

# 6. Run unit tests (excluding integration)
echo "üß™ Running unit tests..."
if [ -n "$(find . -name '*_test.go' -not -path './vendor/*' -not -path './test/integration/*' -not -path './internal/testutil/integration/*')" ]; then
    go test $(go list ./... | grep -v integration) || {
        echo "‚ùå Unit tests failed."
        exit 1
    }
else
    echo "‚ÑπÔ∏è No unit test files found, skipping."
fi

# 7. Check integration tests compile
echo "‚úÖ Checking integration tests compile..."
make ci-integration-check || {
    echo "‚ùå Integration tests don't compile."
    exit 1
}

# 8. Security check for sensitive information
echo "üîê Checking for sensitive information..."
# Check staged files for potential secrets
STAGED_FILES=$(git diff --cached --name-only)
if [ -n "$STAGED_FILES" ]; then
    # Check for private keys
    if git diff --cached | grep -E "-----BEGIN [A-Z]* PRIVATE KEY-----"; then
        echo "‚ö†Ô∏è Found private key in staged files!"
        exit 1
    fi
    
    # Check for SSH keys
    if git diff --cached | grep -E "(ssh-rsa|ssh-ed25519) [A-Za-z0-9+/]{50,}"; then
        echo "‚ö†Ô∏è Found SSH key in staged files!"
        exit 1
    fi
    
    # Check for secrets in .env files (excluding templates)
    if git diff --cached | grep -E "[A-Z_]+(SECRET|KEY|TOKEN|PASSWORD)=[^=].{10,}" | grep -v "your-super-secret\|example\|template\|CHANGE_ME\|REPLACE_WITH"; then
        echo "‚ö†Ô∏è Found potential secret in staged files!"
        echo "Consider using environment variables or secure secret management."
        exit 1
    fi
    
    # Check for database URLs with credentials
    if git diff --cached | grep -E "[a-z]+://[^@\s]+:[^@\s]+@[^/\s]+" | grep -v "username:password\|user:pass\|example\|localhost"; then
        echo "‚ö†Ô∏è Found potential database URL with credentials!"
        exit 1
    fi
fi

echo "‚úÖ All pre-commit checks passed!"
